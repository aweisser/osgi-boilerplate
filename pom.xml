<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.aw.osgi</groupId>
    <artifactId>_felix_</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>1.7</java.version>
    </properties>

    <modules>
        <module>greeter</module>
        <module>_assembly_</module>
    </modules>

    <dependencies>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.framework</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.3.7</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>

            <!-- The maven compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- The Groovy Compiler -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <!-- To compile mixed Java and Groovy (with dependencies between the two), we'll need to generate stubs in addition to normal compilation. -->
                        <!-- The goals related to test sources are disabled because Intrexx libs are missing in the maven repos. -->
                        <!-- So test execution is currently not available in maven. Please execute the tests through your IDE.-->
                        <goals>
                            <goal>addSources</goal>
                            <!----><goal>addTestSources</goal>
                            <goal>generateStubs</goal>
                            <goal>compile</goal>
                            <!----><goal>testGenerateStubs</goal>
                            <!----><goal>testCompile</goal>
                            <goal>removeStubs</goal>
                            <goal>removeTestStubs</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sources>
                        <source>
                            <directory>${project.basedir}/src/main</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </source>
                    </sources>
                    <testSources>
                        <testSource>
                            <directory>${project.basedir}/src/test</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </testSource>
                    </testSources>
                </configuration>
            </plugin>

            <!-- Test configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>


            <!-- Clean up some folders during clean phase -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>felix/bundle</directory>
                            <includes>
                                <include>**/*.jar</include>
                                <include>**/*.properties</include>
                            </includes>
                            <excludes>
                                <exclude>**/.keep</exclude>
                            </excludes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Assemble all necessary dependencies in package phase and copy them to the felix bundle folder. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--<outputDirectory>${project.build.directory}/lib</outputDirectory>-->
                            <outputDirectory>../felix/bundle</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeScope>provided</excludeScope>
                            <includeScope>runtime</includeScope>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- TODO Perhaps take a look at http://docs.codehaus.org/display/MAVENUSER/Maven+and+Integration+Testing -->

        </plugins>

    </build>

</project>